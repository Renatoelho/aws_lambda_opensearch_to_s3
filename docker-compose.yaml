services:
  python:
    depends_on:
      - elasticsearch
      - minio-s3
    hostname: python-lambda
    build:
      context: .
      dockerfile: dockerfile
      args:
        PYTHON_VERSION: 3.12
    image: python-lambda:0.0.1
    volumes:
      - ./src/:/opt/lambda/src
      - ./make/:/opt/lambda/make
    environment:
      - LOCAL_ENVIRONMENT=True
      - PYTHONUNBUFFERED=1
      - TZ=America/Sao_Paulo
      - TERM=xterm-256color
      - INDEX_LIST=index-tes1,index-tes2,index-tes3
      - OPENSEARCH_HOST=elasticsearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=elastic #Usuário Elasticsearch
      - OPENSEARCH_PASSWD=kE2CGa1DRwR82BD0ViqM #Senha Elasticsearch
      - AWS_PROFILE=True
      - AWS_ACCESS_KEY=minio #Usuário MinIO export AWS_ACCESS_KEY=imRswYq1ZWXPvnUZ45Lf
      - AWS_SECRET_KEY=kE2CGa1DRwR82BD0ViqM #Senha MinIO export AWS_SECRET_KEY=b3f4SgvqGvmQvF84TLm2IOfGLJsP5XwIe7e6qSCr
      - AWS_BUCKET=lambda
      - AWS_REGION_NAME=sa-east-1
      - AWS_ENDPOINT=http://minio-s3:9000
      - AWS_BUCKET_KEY=dir/test/output.txt
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.75"
          memory: "512MB"
    working_dir: /opt/lambda/src
    tty: true
    command: tail -f /dev/null
    networks:
      - rede
  elasticsearch:
    hostname: elasticsearch
    image: elasticsearch:7.10.1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.95"
          memory: 4G
    restart: always
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=true 
      - cluster.name=docker-cluster
      - ELASTIC_PASSWORD=kE2CGa1DRwR82BD0ViqM
      - TZ=America/Sao_Paulo
    healthcheck:
      test: curl -u elastic:kE2CGa1DRwR82BD0ViqM -f http://elasticsearch:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
        - rede
  kibana:
    depends_on:
       - elasticsearch
    hostname: kibana
    image: kibana:7.10.1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.95"
          memory: 2G
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=kE2CGa1DRwR82BD0ViqM
      - TZ=America/Sao_Paulo
    healthcheck:
      test: curl -f http://kibana:5601/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    ports:
      - "5601:5601"
    networks:
        - rede
  minio-s3:
    hostname: minio-s3
    image: bitnami/minio:2023
    ports: 
      - "9000:9000"
      - "9001:9001"
    environment: 
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=kE2CGa1DRwR82BD0ViqM
      - MINIO_DEFAULT_BUCKETS=lambda
      - TZ=America/Sao_Paulo
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2G
    restart: always
    volumes: 
      - minio_data:/data
      - minio_certs:/certs
      - minio_bitnami_data:/bitnami/minio/data
    networks:
      - rede

volumes:
  elastic_data:
  minio_data:
  minio_certs:
  minio_bitnami_data:

networks:
  rede:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.4.0.0/16